#include <iostream>

using namespace std;

void swap(int &a, int &b){
    int temp=a;
    a=b;
    b=temp;

}
template <class T>
T partition(T arr[], int inicio, int end)
{

    T pivote = arr[inicio];
    T pospivote = inicio;


    for (int pos = inicio + 1; pos <= end; pos++)
    {
        if (arr[pos] < pivote)
        {

            swap(arr[pospivote + 1], arr[pos]);

            swap(arr[pospivote], arr[pospivote + 1]);

            pospivote ++;
        }
	}
    return pospivote;
}
template <class T>
T quickSort(T arr[], int inicio, int end)
{
    if (inicio < end)
    {
        int p = partition(arr, inicio, end);
        quickSort(arr, inicio, p - 1);
        quickSort(arr, p + 1, end);
	}

}


int main()
{
    const int SIZE = 10;
    int array[SIZE] = {100, 35, 7, 21, 89, 10, 148, 983, 33, 29};

    for (int k = 0; k < SIZE; k++)
        cout << array[k] << " ";
    cout << endl;

    quickSort(array, 0, SIZE-1);


    for (int k = 0; k < SIZE; k++)
        cout << array[k] << " ";
    cout << endl;

    return 0;
}
